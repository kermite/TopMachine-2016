/// Copyright (c) 2008-2011 Brad Williams
/// 
/// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
/// associated documentation files (the "Software"), to deal in the Software without restriction,
/// including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
/// and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
/// subject to the following conditions:
/// 
/// The above copyright notice and this permission notice shall be included in all copies or substantial
/// portions of the Software.
/// 
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
/// NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
/// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
/// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
/// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

using System.Configuration;
using System.Web.Configuration;
using System.Web.Hosting;

namespace db4oProviders
{
    public interface IValidationKeyInfo
    {
        string GetKey();
        bool IsAutoGenerated();
    }

    public sealed class ValidationKeyInfo : IValidationKeyInfo
    {
        private readonly string sectionName;

        public ValidationKeyInfo(string sectionName)
        {
            this.sectionName = sectionName;
        }

        #region IValidationKeyInfo Members

        public string GetKey()
        {
           // Configuration cfg = WebConfigurationManager.OpenWebConfiguration(HostingEnvironment.ApplicationVirtualPath);
            //Configuration cfg = WebConfigurationManager.OpenWebConfiguration("/");
            if (string.IsNullOrEmpty(HostingEnvironment.ApplicationVirtualPath))
            {
                return ((MachineKeySection)ConfigurationManager.GetSection(sectionName)).ValidationKey;

            }
            else 
            {
                Configuration cfg = WebConfigurationManager.OpenWebConfiguration(HostingEnvironment.ApplicationVirtualPath);
                return ((MachineKeySection)cfg.GetSection(sectionName)).ValidationKey;
            }
         }

        public bool IsAutoGenerated()
        {
            return GetKey().Contains("AutoGenerate");
        }

        #endregion
    }
}
